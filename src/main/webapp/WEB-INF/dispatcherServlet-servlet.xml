<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!-- 这是 SpringMVC 的配置文件，包含网站跳转逻辑的控制和配置  （该配置文件必须放在跟 web.xml 同级的目录下） -->

    <!-- 1. 配置要扫描的包，
        这里因为它是SpringMVC的配置文件，只需要扫描控制器，所以我们配置只扫描控制器 context:include-filter
        要使这个配置生效，我们还需要禁用它默认的过滤规则  use-default-filters="false"
    -->
    <context:component-scan base-package="com" use-default-filters="false">
        <!-- 只扫描控制器 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!-- 2. 配置视图解析器：方便页面返回解析 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <mvc:resources location="/" mapping="/**/*.js"/>
    <mvc:resources location="/" mapping="/**/*.css"/>
    <mvc:resources location="/" mapping="/**/*.png"/>

    <!--配置登录拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*"/>
            <mvc:exclude-mapping path="/**/fonts/*"/>
            <mvc:exclude-mapping path="/**/*.css"/>
            <mvc:exclude-mapping path="/**/*.js"/>
            <mvc:exclude-mapping path="/**/*.png"/>
            <mvc:exclude-mapping path="/**/*.gif"/>
            <mvc:exclude-mapping path="/**/*.jpg"/>
            <mvc:exclude-mapping path="/**/*.jpeg"/>
            <mvc:exclude-mapping path="/**/*login*"/>
            <mvc:exclude-mapping path="/**/*Login*"/>
            <bean class="com.component.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 配置 2 个标配-->
    <!-- 3. 将 SpringMVC 不能处理的请求交给 Tomcat：这样静态资源和动态资源都可以请求到了-->
    <mvc:default-servlet-handler/>
    <!-- 4. 配置 SpringMVC 的注解支持，使其支持一些更高级的功能：如 JSR303 校验，快捷的 AJAX 请求，映射动态请求...-->
    <mvc:annotation-driven/>

</beans>